---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- import_tasks: refresh_install_details.yml

##########
# UPDATE THE INSTALLER
- name: patch - create directories
  file: path={{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads"
    - "/tmp/update-installer"

- name: patch - check update installer version
  shell: "{{ ibm_infosvr_install_location.linux }}/Updates/bin/installUpdates -version"
  register: __ibm_infosvr_update_installer_version
  changed_when: False

- name: patch - extract update installer
  unarchive: src={{ ibm_infosvr_media_dir }}/{{ ibm_infosvr_updater.linux }} dest=/tmp/update-installer
  when: __ibm_infosvr_update_installer_version.stdout.find(ibm_infosvr_updater.version) == -1

- name: patch - make executable
  file: path=/tmp/update-installer/updateImage.sh mode=0755
  when: __ibm_infosvr_update_installer_version.stdout.find(ibm_infosvr_updater.version) == -1

- name: patch - update the update installer
  shell: "/tmp/update-installer/updateImage.sh -i {{ ibm_infosvr_install_location.linux }}/_uninstall"
  when: __ibm_infosvr_update_installer_version.stdout.find(ibm_infosvr_updater.version) == -1

##########
# EXTRACT UPDATE MEDIA
# This is a separate step from unarchive to allow files to be transferred independently to save time / bandwidth
- name: patch - check patch is downloaded
  local_action: stat path={{ ibm_infosvr_media_dir }}/{{ item.srcFile }}
  with_items: "{{ ibm_infosvr_patches_list }}"
  register: __ibm_infosvr_patching_files

- name: patch - copy installation media
  copy:
    src: "{{ ibm_infosvr_media_dir }}/{{ item.item.srcFile }}"
    dest: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads/{{ item.item.srcFile }}"
    force: no
  when: item.stat.exists and ibm_infosvr_version_xml.find(item.item.versionInfo) == -1
  with_items: "{{ __ibm_infosvr_patching_files.results }}"

- name: patch - extract updates
  unarchive:
    src: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads/{{ item.item.srcFile }}"
    dest: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads"
    creates: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads/{{ item.item.pkgFile }}"
    copy: no
  when: item.stat.exists and ibm_infosvr_version_xml.find(item.item.versionInfo) == -1
  with_items: "{{ __ibm_infosvr_patching_files.results }}"

##########
# INSTALL UPDATES
- name: patch - install updates
  shell: >
          umask 022 &&
          {{ ibm_infosvr_install_location.linux }}/Updates/bin/installUpdates
          -installLocation {{ ibm_infosvr_install_location.linux }}
          -patchPackage {{ ibm_infosvr_install_location.linux }}/Updates/Downloads/{{ item.item.pkgFile }}
          -user {{ ibm_infosvr_user_isadmin }}
          -password {{ ibm_infosvr_upwd_isadmin }}
          -console
          -wasadmin {{ ibm_infosvr_user_was }}
          -waspassword {{ ibm_infosvr_upwd_was }}
          -acceptlicense
          -dbadmin {{ ibm_infosvr_user_db2_instance }}
          -dbpassword {{ ibm_infosvr_upwd_db2_instance }}
          {% if ibm_infosvr_force.patch is defined and ibm_infosvr_force.patch %}-force{% endif %}
  when: item.stat.exists and ibm_infosvr_version_xml.find(item.item.versionInfo) == -1
  with_items: "{{ __ibm_infosvr_patching_files.results }}"
  notify: re-generate config for open source utilities

- name: patch - clean up installation files
  file: path={{ item.file }} state={{ item.state }}
  with_items:
    - { file: "{{ ibm_infosvr_install_location.linux }}/Updates/Backup.*", state: 'absent' }
    - { file: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads/*.zip", state: 'absent' }
    - { file: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads/*.tar", state: 'absent' }
    - { file: "{{ ibm_infosvr_install_location.linux }}/Updates/Downloads/*.tar.gz", state: 'absent' }
  become_user: root
  become: yes
