---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: setting up variables
  raw: "echo 0"
  notify:
    - "set IBM InfoSphere Information Server variables"
  tags:
    - update

- meta: flush_handlers

- import_tasks: install.yml

- meta: flush_handlers

- import_tasks: update.yml
  tags:
    - update

- meta: flush_handlers

- import_tasks: update-jdk.yml
  when: ('ibm-information-server-domain' in group_names) or ('ibm-information-server-engine' in group_names)
  tags:
    - update

- import_tasks: update-jdk-win.yml
  when: ('ibm-information-server-clients' in group_names)
  tags:
    - update

- import_tasks: configure.yml
  become_user: root
  become: yes
  when: ('ibm-information-server-domain' in group_names)
  tags:
    - update

- import_tasks: configure-ia.yml
  become_user: root
  become: yes
  when: __ibm_infosvr_features.ia

# TODO: currently only enables masking for default 'dstage1' project
# -- should take a variable giving a list of projects
- import_tasks: configure-odpp.yml
  when: __ibm_infosvr_features.masking

- import_tasks: configure-em.yml
  become_user: root
  become: yes
  when: __ibm_infosvr_features.event_mgmt

- import_tasks: configure-igd.yml
  become_user: root
  become: yes
  when: __ibm_infosvr_features.igd

- name: copy UG archive from domain tier
  fetch:
    src: "{{ ibm_infosvr_install_location.linux }}/UGDockerDeployment/installer/kubeselfextract.bsx"
    dest: cache/kubeselfextract.bsx
    flat: yes
  when: ('ibm-information-server-domain' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- name: copy token certificate from domain tier
  fetch:
    src: "{{ ibm_infosvr_install_location.linux }}/ASBServer/apps/lib/iis/tknproperties/tokenservicepublic.cer"
    dest: cache/tokenservicepublic.cer
    flat: yes
  when: ('ibm-information-server-domain' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- import_tasks: ug.yml
  become: yes
  when: ('ibm-information-server-ug' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- name: apply UG (ISES) template to domain tier
  template:
    src: uginfo.rsp.j2
    dest: "{{ ibm_infosvr_install_location.linux }}/UGDockerDeployment/installer/uginfo.rsp"
  become: yes
  when: ('ibm-information-server-domain' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- name: configure domain tier to use UG (ISES) tier
  shell: "{{ item }}"
  args:
    executable: /bin/bash
  with_items:
    - "{{ ibm_infosvr_install_location.linux }}/ASBServer/bin/iisAdmin.sh -set -key com.ibm.iis.odf.PredictorServiceEndpoint -value {{ ibm_infosvr_hosts.ug }}:{{ ibm_infosvr_ports.ug_console }}"
    - "{{ ibm_infosvr_install_location.linux }}/ASBServer/bin/iisAdmin.sh -set -key com.ibm.iis.ug.host.name -value {{ ibm_infosvr_hosts.ug }}"
    - "{{ ibm_infosvr_install_location.linux }}/ASBServer/bin/iisAdmin.sh -set -key com.ibm.iis.isf.security.AllowedRefererDomainNames -value {{ ibm_infosvr_hosts.ug.split('.')[1:] | join('.') }}"
  become: yes
  when: ('ibm-information-server-domain' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- name: update engine tier zookeeper config for UG (ISES) tier
  lineinfile:
    path: "{{ ibm_infosvr_install_location.linux }}/ASBNode/conf/odf.properties"
    state: present
    regexp: "^odf.zookeeper.connect="
    line: "odf.zookeeper.connect={{ ibm_infosvr_hosts.ug }}\\:2181/kafka"
    backup: yes
  become: yes
  when: ('ibm-information-server-engine' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- name: configure ODF to use UG (ISES) tier
  shell: "{{ item }}"
  args:
    executable: /bin/bash
  with_items:
    - "{{ ibm_infosvr_install_location.linux }}/ASBNode/odf/ODFEngine stop"
    - "{{ ibm_infosvr_install_location.linux }}/ASBNode/odf/ODFEngine start"
  become: yes
  when: ('ibm-information-server-engine' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises

- name: configure domain tier to use UG (ISES) tier
  shell: >
          {{ ibm_infosvr_install_location.linux }}/UGDockerDeployment/bin/SetSOSProperties.sh
          {{ ibm_infosvr_hosts.ug }}
  args:
    executable: /bin/bash
  become: yes
  when: ('ibm-information-server-domain' in group_names) and ibm_infosvr_features.ises is defined and ibm_infosvr_features.ises
